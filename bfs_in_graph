#include <bits/stdc++.h> 
vector<int> BFS(int vertex, vector<pair<int, int>> edges)
{
   unordered_map<int,set<int>> adjlist;

    for(int i=0;i<edges.size();i++){
   int u=edges[i].first;
        int v=edges[i].second;
        adjlist[u].insert(v);
        adjlist[v].insert(u);

    
    }
    unordered_map<int, bool> check;
    vector<int> ans;
    for(int i=0;i<vertex;i++){
        if(!check[i]){
   queue<int> q;
        q.push(i);
        check[i]=1;
        while(!q.empty()){
            int frontnode= q.front();
            q.pop();
            
            ans.push_back(frontnode);
            
            for(auto k: adjlist[frontnode]){
                if(!check[k]){
             q.push(k);
                check[k]=1;
            }
        }
        }}  
    } 
        
        
        
    
    return ans;
    
}
